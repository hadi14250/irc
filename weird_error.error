==14808==ERROR: AddressSanitizer: heap-use-after-free on address 0x613000000468 at pc 0x000104da9ccc bp 0x7ffeeae66880 sp 0x7ffeeae66878
READ of size 1 at 0x613000000468 thread T0
    #0 0x104da9ccb in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long() const+0x5b (ircserv:x86_64+0x100011ccb)
    #1 0x104da5850 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::clear()+0x100 (ircserv:x86_64+0x10000d850)
    #2 0x104da5470 in Server::readMsg(int)+0xf20 (ircserv:x86_64+0x10000d470)
    #3 0x104da72d3 in Server::createServer()+0x513 (ircserv:x86_64+0x10000f2d3)
    #4 0x104d9bb89 in main+0x289 (ircserv:x86_64+0x100003b89)
    #5 0x7fff6dabdcc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)

0x613000000468 is located 168 bytes inside of 336-byte region [0x6130000003c0,0x613000000510)
freed by thread T0 here:
    #0 0x104f15c0d in wrap__ZdlPv+0x7d (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x55c0d)
    #1 0x104db8184 in std::__1::_DeallocateCaller::__do_call(void*)+0x14 (ircserv:x86_64+0x100020184)
    #2 0x104db8168 in std::__1::_DeallocateCaller::__do_deallocate_handle_size(void*, unsigned long)+0x18 (ircserv:x86_64+0x100020168)
    #3 0x104db8140 in std::__1::_DeallocateCaller::__do_deallocate_handle_size_align(void*, unsigned long, unsigned long)+0x20 (ircserv:x86_64+0x100020140)
    #4 0x104db8114 in std::__1::__libcpp_deallocate(void*, unsigned long, unsigned long)+0x24 (ircserv:x86_64+0x100020114)
    #5 0x104dc02fc in std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, Client>, void*> >::deallocate(std::__1::__tree_node<std::__1::__value_type<int, Client>, void*>*, unsigned long)+0x2c (ircserv:x86_64+0x1000282fc)
    #6 0x104dc0204 in std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, Client>, void*> > >::deallocate(std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, Client>, void*> >&, std::__1::__tree_node<std::__1::__value_type<int, Client>, void*>*, unsigned long)+0x24 (ircserv:x86_64+0x100028204)
    #7 0x104dd41ad in std::__1::__tree<std::__1::__value_type<int, Client>, std::__1::__map_value_compare<int, std::__1::__value_type<int, Client>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, Client> > >::erase(std::__1::__tree_const_iterator<std::__1::__value_type<int, Client>, std::__1::__tree_node<std::__1::__value_type<int, Client>, void*>*, long>)+0x1dd (ircserv:x86_64+0x10003c1ad)
    #8 0x104dd390e in unsigned long std::__1::__tree<std::__1::__value_type<int, Client>, std::__1::__map_value_compare<int, std::__1::__value_type<int, Client>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, Client> > >::__erase_unique<int>(int const&)+0x29e (ircserv:x86_64+0x10003b90e)
    #9 0x104da44cc in std::__1::map<int, Client, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, Client> > >::erase(int const&)+0x1c (ircserv:x86_64+0x10000c4cc)
    #10 0x104da2a23 in Server::deletePfd(int)+0xc53 (ircserv:x86_64+0x10000aa23)
    #11 0x104def009 in Commands::QUIT()+0x69 (ircserv:x86_64+0x100057009)
    #12 0x104ddc456 in Commands::postRegistrationCmds()+0x966 (ircserv:x86_64+0x100044456)
    #13 0x104ddae6a in Commands::Commands(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Client&)+0x14a (ircserv:x86_64+0x100042e6a)
    #14 0x104ddc732 in Commands::Commands(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Client&)+0x22 (ircserv:x86_64+0x100044732)
    #15 0x104da52a2 in Server::readMsg(int)+0xd52 (ircserv:x86_64+0x10000d2a2)
    #16 0x104da72d3 in Server::createServer()+0x513 (ircserv:x86_64+0x10000f2d3)
    #17 0x104d9bb89 in main+0x289 (ircserv:x86_64+0x100003b89)
    #18 0x7fff6dabdcc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)

previously allocated by thread T0 here:
    #0 0x104f157ed in wrap__Znwm+0x7d (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x557ed)
    #1 0x104db76c8 in std::__1::__libcpp_allocate(unsigned long, unsigned long)+0x18 (ircserv:x86_64+0x10001f6c8)
    #2 0x104dc75d4 in std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, Client>, void*> >::allocate(unsigned long, void const*)+0x54 (ircserv:x86_64+0x10002f5d4)
    #3 0x104dc72b0 in std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, Client>, void*> > >::allocate(std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, Client>, void*> >&, unsigned long)+0x20 (ircserv:x86_64+0x10002f2b0)
    #4 0x104dc657b in std::__1::map<int, Client, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, Client> > >::__construct_node_with_key(int const&)+0x15b (ircserv:x86_64+0x10002e57b)
    #5 0x104da1907 in std::__1::map<int, Client, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, Client> > >::operator[](int const&)+0x257 (ircserv:x86_64+0x100009907)
    #6 0x104da1301 in Server::addNewPfd(int)+0x8f1 (ircserv:x86_64+0x100009301)
    #7 0x104da7002 in Server::createServer()+0x242 (ircserv:x86_64+0x10000f002)
    #8 0x104d9bb89 in main+0x289 (ircserv:x86_64+0x100003b89)
    #9 0x7fff6dabdcc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)

SUMMARY: AddressSanitizer: heap-use-after-free (ircserv:x86_64+0x100011ccb) in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long() const+0x5b
Shadow bytes around the buggy address:
  0x1c2600000030: fd fd fd fd fd fd fd fd fa fa fa fa fa fa fa fa
  0x1c2600000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c2600000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c2600000060: 00 00 00 00 00 00 00 00 00 00 fa fa fa fa fa fa
  0x1c2600000070: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
=>0x1c2600000080: fd fd fd fd fd fd fd fd fd fd fd fd fd[fd]fd fd
  0x1c2600000090: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c26000000a0: fd fd fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c26000000b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c26000000c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1c26000000d0: 00 00 00 00 00 00 00 00 00 00 fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14808==ABORTING
zsh: abort      ./ircserv 6667 pass
jebucoy@lab1r6s6 IRCTEST % 